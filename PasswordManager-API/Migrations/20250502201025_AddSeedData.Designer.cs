// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PasswordManager_API.Context;

#nullable disable

namespace PasswordManager_API.Migrations
{
    [DbContext(typeof(PasswordManagerDbContext))]
    [Migration("20250502201025_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PasswordManager_API.Entities.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LookupTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LookupItems");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8640),
                            IsActive = true,
                            LookupTypeId = 1,
                            Name = "Jordanin"
                        },
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8642),
                            IsActive = true,
                            LookupTypeId = 2,
                            Name = "Client"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8643),
                            IsActive = true,
                            LookupTypeId = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 100,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8644),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 101,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8644),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Name"
                        },
                        new
                        {
                            Id = 102,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8645),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 103,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8646),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "UserName"
                        },
                        new
                        {
                            Id = 104,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8646),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "National ID"
                        },
                        new
                        {
                            Id = 200,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8647),
                            IsActive = true,
                            LookupTypeId = 4,
                            Name = "Trainer"
                        },
                        new
                        {
                            Id = 201,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8648),
                            IsActive = true,
                            LookupTypeId = 4,
                            Name = "Trainere"
                        },
                        new
                        {
                            Id = 300,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8649),
                            IsActive = true,
                            LookupTypeId = 5,
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 301,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8649),
                            IsActive = true,
                            LookupTypeId = 5,
                            Name = "Banking"
                        },
                        new
                        {
                            Id = 302,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8650),
                            IsActive = true,
                            LookupTypeId = 5,
                            Name = "Social Media"
                        },
                        new
                        {
                            Id = 303,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8651),
                            IsActive = true,
                            LookupTypeId = 5,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("PasswordManager_API.Entities.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LookupTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8493),
                            IsActive = true,
                            Name = "Nationality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8503),
                            IsActive = true,
                            Name = "Role"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8504),
                            IsActive = true,
                            Name = "UsernameType"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8504),
                            IsActive = true,
                            Name = "Specialization"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8505),
                            IsActive = true,
                            Name = "Category"
                        });
                });

            modelBuilder.Entity("PasswordManager_API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerfied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OTPExipry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 2, 23, 10, 25, 738, DateTimeKind.Local).AddTicks(8672),
                            Email = "b846bad23206df937f768e06362affb42a22ea8658c2403642b2a0049e81709297ad89e2a7946c48be8462dcd622f169",
                            IsActive = true,
                            IsVerfied = true,
                            Password = "d62915f355cf243d2d90f2d7c506af00baee5d3e8d3870d656a354fcd0a25c87c9b648a6f2c59ece1bfb002d5d2c0567",
                            RoleId = 2,
                            UserName = "fc8c0c79545bb5e9afe969574c81eeabe7702cad289584b0b19dfedfbeb338a626b855a7ddb54a9ff0a9b73c76cb3fdf"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
